/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]     // REGISTER, load=1
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]    // REGISTER, load=0
 *
 * if      (reset[t] == 1) out[t] = 0
 * else if (load[t] == 1)  out[t] =  in[t-1]       // REGISTER, load=1
 * else if (inc[t] == 1)   out[t] = out[t-1] + 1   // integer addition
 * else                    out[t] = out[t-1]       // REGISTER, load=0
 */


// inc chip, register chip, and a bunch of logic gates
CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    
    // if load=1, regOut=in-1; if load=0, regOut=out-1
    Register(in=in, load=load, out=regOut);  
    // Not(in=regOut, out=notRegOut);

    Inc16(in=out2, out=incOut);    
    Mux16(a=in, b=incOut, sel=inc, out=incOutDel);

    Register(in=in, load=true, out=prevIn);
    Mux16(a=incOutDel, b=prevIn, sel=load, out=ifLoad);

    Register(in=ifLoad, load=true, out=out,out=out2);

    // FINAL
    // Mux16(a=ifInc, b=false, sel=reset, out=out);
    
}
